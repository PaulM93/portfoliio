[{
    "title": "Olatoo",
    "completed": true,
    "hashtags": [
        "React",
        "NextJS",
        "Firestore",
        "Firebase",
        "MaterialUI",
        "MomentJS",
        "Axios",
        "Stripe",
        "AdobeXD",
        "Photoshop",
        "SendGrid",
        "Vercel",
        "React Calendar",
        "Responsive Design"
    ],
    "projectInfo": {
      "considerations": "Although I am satisfied with what I have been able to achieve in building Olatoo, it was my first project and now with more knowledge, I may have considered other options to build the app. I am not happy with the folder structure and layout of my code but I put this down to lack of experience. I had originally built the app with CreateReactApp not knowing that this was not good for SEO purposes so I migrated everything over to Next.JS which was a difficult process.",
            "functionality": [
                "A user signs up to Olatoo using Facebook, Google or email all of which are handled through firebase authentication. Email authentication is then required which is also handled by firebase. ",
            "The user has access to three free trial classes. These may be booked directly from the tutor dashboard through booking buttons found on tutor cards.",
            "The user can access their booking information on their dashboard. An email with booking information is sent to the user and tutor through sendgrid.. The user has the option to cancel their lesson up to one hour before it is due to take place.",
            "At the time of the booking the user connects to the class from their Olatoo dashboard through the click of a button to zoom using the personal meeting ID of the tutor.",
            "If the user is satisfied with their trial lesson they may then purchase class credits. This is handled through the firebase stripe subscription extension. Lesson credits are automatically renewed on a monthly basis."
            ],
            "info": [
                {
                    "title": "Description",
                    "description":
                      "Olatoo is an online Spanish language learning platform where you can connect with professional tutors from all across Latin America for one-to-one conversational Spanish classes."
                },
                {
                    "title": "Technology",
                    "description":
                      "Olatoo is built using Next.JS due to its server side rendering capabilities which are essential for search engine optimization. Firebase was also used due to its ease of use in providing access to firebase authentication, the firestore cloud database and the stripe subscription extension. As the app was built with Next.JS it felt logical to deploy it using Vercel as Next.JS was built by the same team."
                  },
                  {
                    "title": "Design Process",
                    "description":
                      "The app layout was designed using AdobeXD with photoshop used to edit images and icons. MaterialUI was used to style the app due to its ease of use, customisation options and vast amount of components."
                  },
                  {
                    "title": "Authentication",
                    "description":
                      "User authentication for Olatoo is handled by firebase authentication with users having the options of Facebook, Google or email."
                  },
                  {
                    "title": "Booking System",
                    "description":
                      "A user who signs up to Olatoo is given 3 free trial classes which may be booked on signup or through the booking process on the user dashboard. If a user books a trial class upon signup they must select a tutor country, date and time. Relevant tutors are then filtered using firestore web api and once the user has entered their authentication details a class is assigned to a tutor at random. The user also has the option to choose which tutor they want their classes to be with using the booking buttons found on tutor cards."
                  },
                  {
                    "title": "Class Bookings",
                    "description":
                      "Upon account creation user information is saved to firestore and a stripe customer account is created which is linked to the relevant firestore document. Email verification from the user is required to book an Olatoo class but this feature has been turned off due to testing. A user books a class using the booking modal found on each tutor card. A class type, date and time are chosen and the class is then booked and saved to the database under the bookings collection. The booking is also added to the relevant tutor document to ensure it can be filtered and removed to prevent bookings at the same time."
                  },
                  {
                    "title": "",
                    "description":
                      "Time Zones were also considered with tutors and students coming from different parts of the world. This was handled upon signup using Intl.DateTimeFormat().resolvedOptions().timeZone. The user cannot set their timezone but if a timezone change was noted this was automatically updated. The relevant timezone was then applied to React Calendar using various util functions to show class time slots at the correct timezone for the user. MomentJS was also used to handle date and time formatting."
                  },
                  {
                    "title": "Student Dashboard",
                    "description":
                      "The user dashboard gives the user access to their bookings and profile information. From here they may update their profile information, edit profile picture, change their password or email address, deactivate their account, view their favourite tutors or view their upcoming and completed bookings.The student may also book classes with tutors directly from their dashboard. The tutor dashboard also provides similar functionality to the student dashboard."
                  },
                  {
                    "title": "Subscription Payments",
                    "description":
                      "If a user decides they want to purchase an Olatoo lesson plan this is handled with the stripe subscription extension which is linked to a custom stripe checkout. Once a plan is purchased, lesson credits are added to the user’s account and refreshed on a monthly basis. Lesson credits are added using metadata."
                  },
                  {
                    "title": "Subscription Payments",
                    "description":
                      "If a user decides they want to purchase an Olatoo lesson plan this is handled with the stripe subscription extension which is linked to a custom stripe checkout. Once a plan is purchased, lesson credits are added to the user’s account and refreshed on a monthly basis. Lesson credits are added using metadata."
                  }
            ]
        
    },
    "link": "https://www.olatoo.com/",
    "github": "https://github.com/PaulM93/Olatoo"
},
{
  "title": "Spaced",
  "completed": true,
  "hashtags": [
      "React",
      "Create React App",
      "AdobeXD",
      "Framer-motion",
      "ChakraUI",
      "MySQL",
      "JWT",
      "Supermemo",
      "Redux", 
      "Redux Toolkit",
      "Typescript",
      "Day.js",
      "NodeJS",   
      "Express",
      "bcrypt",
      "Axios"
  ],
  "projectInfo": {
    "considerations": "Overall I am happy with what I have achieved creating Spaced. I am happy with the design aesthetic and the ease of use at which the app can be used. I plan on continuing to develop the app to improve its usability. I also want to create a native mobile version of the app that will allow the user to input and translate words directly to their flashcards through the camera. Upon developing the app I struggled with how to implement JWT refresh tokens so this is an area I need to improve on.",
          "functionality": ["User authentication is handled using JWT, bcrypt and mysql. When a user signs up to Spaced passwords are hashed using bcrypt and saved to the mysql database along with a user profile for the user. A JWT token is then issued which is used to authorise api calls. When a user signs into Spaced the user password is retrieved from the database and compared to the entered password using bcrypt.",
          "Once a user has signed up to Spaced they may then create a “collection”. The user may then edit and add flashcards to their collection. Cards are generated with the initial starting properties required for the supermemo2 algorithm.",
          "When a user studies their flashcards each flashcard is passed through the supermemo algorithm and its properties are updated. Properties output by the algorithm are dependent on the user input for each flashcard. Once the study process is complete the updated flashcards are then saved to the database.The nexty study date for the collection is displayed using dayjs formatting.",
          "Users also have the capability to edit, reset, and delete individual cards from each collection or may delete entire collections from their user dashboard.",
          "A user may also update their password and email used to create their account from their profile section."
        ],
          "info": [
              {
                  "title": "Description",
                  "description":
                    "Spaced is a flashcard memory app that utilises the Supermemo 2 (SM-2) algorithm to provide an easy method of study. SM-2 is a simple spaced repetition algorithm that calculates the number of days to wait before reviewing a piece of information based on how easily the information was remembered today."
              },
              {
                  "title": "Technology",
                  "description":
                    "Spaced is built using React (CRA) with Redux to handle front-end operations and utilises a Node.js Express backend server with mysql to handle user operations and authentication. Framer-motion is used to make the app UI more dynamic with clean animations."
                },
                {
                  "title": "Design Process",
                  "description":
                    "The app was designed using figma and utilises both ChakraUI components and custom built framer motion components to provide an intuitive and reactive UI experience. "
                }
          ]
      
  },
  "link": "",
  "github": "https://github.com/PaulM93/portfoliio"
},
{
    "title": "MVPT",
    "completed": false,
    "hashtags": [
        "React",
        "NextJS",
        "MongoDB",
        "Firebase",
        "ChakraUI",
        "MomentJS",
        "Stripe",
        "AdobeXD",
        "Photoshop",
        "SendGrid",
        "Axios",
        "Responsive Design"
    ],
    "projectInfo": {
      "considerations": "",
            "functionality": [
                "Authentication will be handled with Firebase Authentication",
                "Payments for sessions and training products will be handled by Stripe.",
                "Online training sessions will be handled using the Zoom Api to generate individual meetings for each session booked."
            ],
            "info": [
                {
                    "title": "Description",
                    "description":
                      "MyvirtualPT (MVPT) is an online marketplace where you can connect with personal trainers from all over the UK for one-to-one online training sessions. Online training products are also available for purchase."
                },
                {
                    "title": "Technology",
                    "description":
                      "Development of the app is currently in progress. The app is being built with Next.JS, MongoDB and ChakraUI. Stripe will be used to handle payments."
                  },
                  {
                    "title": "Design Process",
                    "description":
                      "The app is being designed with AdobeXD with the design framework ChakraUI."
                  }
            ]
        
    },
    "link": "",
    "github": ""
},
{
    "title": "Porftolio",
    "completed": true,
    "hashtags": [
        "React",
        "Create React App",
        "AdobeXD",
        "Framer-motion",
        "Nodemailer",
        "Chakra UI",
        "Heroku",
        "NodeJS",
        "Express",
        "Axios"
    ],
    "projectInfo": {
      "considerations": "I am very pleased with how my portfolio has turned out. I believe the design aesthetic is clean and the animations add some dynamism to the website. In the future I would update my portfolio to use a CMS so information can be updated more easily.",
            "functionality": [],
            "info": [
                {
                    "title": "Description",
                    "description":
                      "This portfolio is built to showcase some of the skills I have developed as a self taught developer. "
                },
                {
                    "title": "Technology",
                    "description":
                      "This portfolio is built with Create React App and the design framework ChakraUI. Framer motion is used to animate components. Nodemailer is used with express and NodeJs to collect contact information and send emails."
                  },
                  {
                    "title": "Design Process",
                    "description":
                      "The app is being designed with AdobeXD with the design framework ChakraUI."
                  }
            ]
        
    },
    "link": "",
    "github": "https://github.com/PaulM93/portfoliio"
}
]